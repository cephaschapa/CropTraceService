import { type AbstractStreamInit } from '@libp2p/interface-stream-muxer/stream';
import type { Direction, Stream } from '@libp2p/interface-connection';
export interface DataChannelOpts {
    maxMessageSize: number;
    maxBufferedAmount: number;
    bufferedAmountLowEventTimeout: number;
}
export interface WebRTCStreamInit extends AbstractStreamInit {
    /**
     * The network channel used for bidirectional peer-to-peer transfers of
     * arbitrary data
     *
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel}
     */
    channel: RTCDataChannel;
    dataChannelOptions?: Partial<DataChannelOpts>;
}
export interface WebRTCStreamOptions {
    /**
     * The network channel used for bidirectional peer-to-peer transfers of
     * arbitrary data
     *
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel}
     */
    channel: RTCDataChannel;
    /**
     * The stream direction
     */
    direction: Direction;
    dataChannelOptions?: Partial<DataChannelOpts>;
    maxMsgSize?: number;
    onEnd?: (err?: Error | undefined) => void;
}
export declare function createStream(options: WebRTCStreamOptions): Stream;
//# sourceMappingURL=stream.d.ts.map