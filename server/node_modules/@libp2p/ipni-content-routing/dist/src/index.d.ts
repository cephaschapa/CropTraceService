import type { ContentRouting } from '@libp2p/interface-content-routing';
import type { Multiaddr } from '@multiformats/multiaddr';
export interface IpniResponseItem {
    Metadata: string;
    ContextID: string;
    Provider: {
        ID: string;
        Addrs: Multiaddr[];
    };
}
export interface IpniContentRoutingInit {
    /**
     * A concurrency limit to avoid request flood in web browser (default: 4)
     *
     * @see https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12
     */
    concurrentRequests?: number;
    /**
     * How long a request is allowed to take in ms (default: 30 seconds)
     */
    timeout?: number;
}
export declare function ipniContentRouting(url: string | URL, init?: IpniContentRoutingInit): () => ContentRouting;
//# sourceMappingURL=index.d.ts.map