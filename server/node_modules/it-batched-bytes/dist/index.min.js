(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.ItBatchedBytes = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var ItBatchedBytes=(()=>{var U=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var N=Object.prototype.hasOwnProperty;var F=(s,t)=>{for(var e in t)U(s,e,{get:t[e],enumerable:!0})},I=(s,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of T(t))!N.call(s,r)&&r!==e&&U(s,r,{get:()=>t[r],enumerable:!(n=O(t,r))||n.enumerable});return s};var z=s=>I(U({},"__esModule",{value:!0}),s);var M={};F(M,{default:()=>j});function L(){let s={};return s.promise=new Promise((t,e)=>{s.resolve=t,s.reject=e}),s}function c(s){return globalThis.Buffer!=null?new Uint8Array(s.buffer,s.byteOffset,s.byteLength):s}function b(s=0){return globalThis.Buffer?.alloc!=null?c(globalThis.Buffer.alloc(s)):new Uint8Array(s)}function y(s=0){return globalThis.Buffer?.allocUnsafe!=null?c(globalThis.Buffer.allocUnsafe(s)):new Uint8Array(s)}function d(s,t){t==null&&(t=s.reduce((r,i)=>r+i.length,0));let e=y(t),n=0;for(let r of s)e.set(r,n),n+=r.length;return c(e)}function D(s,t){if(s===t)return!0;if(s.byteLength!==t.byteLength)return!1;for(let e=0;e<s.byteLength;e++)if(s[e]!==t[e])return!1;return!0}var B=Symbol.for("@achingbrain/uint8arraylist");function v(s,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let n of s){let r=e+n.byteLength;if(t<r)return{buf:n,index:t-e};e=r}throw new RangeError("index is out of bounds")}function p(s){return!!s?.[B]}var h=class{constructor(...t){Object.defineProperty(this,B,{value:!0}),this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let n of t)if(n instanceof Uint8Array)e+=n.byteLength,this.bufs.push(n);else if(p(n))e+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let n of t.reverse())if(n instanceof Uint8Array)e+=n.byteLength,this.bufs.unshift(n);else if(p(n))e+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=v(this.bufs,t);return e.buf[e.index]}set(t,e){let n=v(this.bufs,t);n.buf[n.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let n=0;n<t.length;n++)this.set(e+n,t[n]);else if(p(t))for(let n=0;n<t.length;n++)this.set(e+n,t.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:n,length:r}=this._subList(t,e);return d(n,r)}subarray(t,e){let{bufs:n,length:r}=this._subList(t,e);return n.length===1?n[0]:d(n,r)}sublist(t,e){let{bufs:n,length:r}=this._subList(t,e),i=new h;return i.length=r,i.bufs=n,i}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:[...this.bufs],length:this.length};let n=[],r=0;for(let i=0;i<this.bufs.length;i++){let a=this.bufs[i],u=r,f=u+a.byteLength;if(r=f,t>=f)continue;let w=t>=u&&t<f,l=e>u&&e<=f;if(w&&l){if(t===u&&e===f){n.push(a);break}let o=t-u;n.push(a.subarray(o,o+(e-t)));break}if(w){if(t===0){n.push(a);continue}n.push(a.subarray(t-u));continue}if(l){if(e===f){n.push(a);break}n.push(a.subarray(0,e-u));break}n.push(a)}return{bufs:n,length:e-t}}indexOf(t,e=0){if(!p(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let r=n.byteLength;if(r===0)throw new TypeError("search must be at least 1 byte long");let i=256,a=new Int32Array(i);for(let o=0;o<i;o++)a[o]=-1;for(let o=0;o<r;o++)a[n[o]]=o;let u=a,f=this.byteLength-n.byteLength,w=n.byteLength-1,l;for(let o=e;o<=f;o+=l){l=0;for(let g=w;g>=0;g--){let A=this.get(o+g);if(n[g]!==A){l=Math.max(1,g-u[A]);break}}if(l===0)return o}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let n=y(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,e),this.write(n,t)}getInt16(t,e){let n=this.subarray(t,t+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,e)}setInt16(t,e,n){let r=b(2);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt16(0,e,n),this.write(r,t)}getInt32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,e)}setInt32(t,e,n){let r=b(4);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt32(0,e,n),this.write(r,t)}getBigInt64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,e)}setBigInt64(t,e,n){let r=b(8);new DataView(r.buffer,r.byteOffset,r.byteLength).setBigInt64(0,e,n),this.write(r,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let n=y(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,e),this.write(n,t)}getUint16(t,e){let n=this.subarray(t,t+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,e)}setUint16(t,e,n){let r=b(2);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint16(0,e,n),this.write(r,t)}getUint32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,e)}setUint32(t,e,n){let r=b(4);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint32(0,e,n),this.write(r,t)}getBigUint64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,e)}setBigUint64(t,e,n){let r=b(8);new DataView(r.buffer,r.byteOffset,r.byteLength).setBigUint64(0,e,n),this.write(r,t)}getFloat32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,e)}setFloat32(t,e,n){let r=b(4);new DataView(r.buffer,r.byteOffset,r.byteLength).setFloat32(0,e,n),this.write(r,t)}getFloat64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,e)}setFloat64(t,e,n){let r=b(8);new DataView(r.buffer,r.byteOffset,r.byteLength).setFloat64(0,e,n),this.write(r,t)}equals(t){if(t==null||!(t instanceof h)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!D(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let n=new h;return n.bufs=t,e==null&&(e=t.reduce((r,i)=>r+i.byteLength,0)),n.length=e,n}};function k(s){return s[Symbol.asyncIterator]!=null}var m=1024*1024,V=(s,t)=>{t.append(s)};function S(s,t){return k(s)?async function*(){let e=new h,n=!1,r=L(),i=Number(t?.size??m);if((isNaN(i)||i===0||i<0)&&(i=m),i!==Math.round(i))throw new Error("Batch size must be an integer");let a=t?.yieldAfter??0,u=t?.serialize??V;for(Promise.resolve().then(async()=>{try{let f;for await(let w of s){if(u(w,e),e.byteLength>=i){clearTimeout(f),r.resolve();continue}f=setTimeout(()=>{r.resolve()},a)}clearTimeout(f),r.resolve()}catch(f){r.reject(f)}finally{n=!0}});!n;)if(await r.promise,r=L(),e.byteLength>0){let f=e;e=new h,yield f.subarray()}}():function*(){let e=new h,n=Number(t?.size??m);if((isNaN(n)||n===0||n<0)&&(n=m),n!==Math.round(n))throw new Error("Batch size must be an integer");let r=t?.serialize??V;for(let i of s)r(i,e),e.byteLength>=n&&(yield e.subarray(0,n),e.consume(n));e.byteLength>0&&(yield e.subarray())}()}var j=S;return z(M);})();
return ItBatchedBytes}));
