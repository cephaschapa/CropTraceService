import { type Upgrader, type Transport } from '@libp2p/interface-transport';
import { type RelayDiscoveryComponents } from './discovery.js';
import { type RelayStoreInit } from './reservation-store.js';
import type { AddressManager } from '@libp2p/interface-address-manager';
import type { ConnectionGater } from '@libp2p/interface-connection-gater';
import type { ConnectionManager } from '@libp2p/interface-connection-manager';
import type { ContentRouting } from '@libp2p/interface-content-routing';
import type { Libp2pEvents } from '@libp2p/interface-libp2p';
import type { PeerId } from '@libp2p/interface-peer-id';
import type { PeerStore } from '@libp2p/interface-peer-store';
import type { Registrar } from '@libp2p/interface-registrar';
import type { EventEmitter } from '@libp2p/interfaces/events';
export interface CircuitRelayTransportComponents extends RelayDiscoveryComponents {
    peerId: PeerId;
    peerStore: PeerStore;
    registrar: Registrar;
    connectionManager: ConnectionManager;
    upgrader: Upgrader;
    addressManager: AddressManager;
    contentRouting: ContentRouting;
    connectionGater: ConnectionGater;
    events: EventEmitter<Libp2pEvents>;
}
/**
 * RelayConfig configures the circuit v2 relay transport.
 */
export interface CircuitRelayTransportInit extends RelayStoreInit {
    /**
     * The number of peers running diable relays to search for and
     * connect to. (default: 0)
     */
    discoverRelays?: number;
    /**
     * The maximum number of simultaneous STOP inbound streams that can be open at
     * once - each inbound relayed connection uses a STOP stream (default: 300)
     */
    maxInboundStopStreams?: number;
    /**
     * The maximum number of simultaneous STOP outbound streams that can be open at
     * once. If this transport is used along with the relay server these settings
     * should be set to the same value (default: 300)
     */
    maxOutboundStopStreams?: number;
}
export declare function circuitRelayTransport(init?: CircuitRelayTransportInit): (components: CircuitRelayTransportComponents) => Transport;
//# sourceMappingURL=index.d.ts.map